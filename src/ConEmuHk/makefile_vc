
.SILENT:

NAME=ConEmuHk
DIRNAME=$(NAME)
RELEASEDIR=..\..\Release\ConEmu
NEEDENTRY=1
USE_PDB = 1
NO_OPTIMIZE = 1

#Issue 1876
NEEDDEFLIB = 1
!undef USEDDKCRT

!include ../makefile_vc_defs

USERLIBS = kernel32.lib user32.lib
!if "$(VC)" == "14"
# SystemFunction036 ???
USERLIBS = $(USERLIBS) advapi32.lib
!endif

DEF_NAME = export

#!if defined(DONT_USE_SEH)
DEF_SEH = /DDONT_USE_SEH
#!else
#DEF_SEH = /DUSE_SEH
#!endif

!if defined(AMD64)
OUTNAME = ConEmuHk64
!else
OUTNAME = ConEmuHk
!endif

# !!! WindowsXP для ConsoleAlias !!!
CPPWINVER=/D_WIN32_WINNT=0x0501

BASEADDRESS=/DYNAMICBASE:NO /FIXED:NO /BASE:0x7E110000
#BASEADDRESS=/DYNAMICBASE
#!if defined(AMD64) || "$(CPU)" == "AMD64"
#BASEADDRESS=/DYNAMICBASE:NO /BASE:0x7E110000 /FIXED:NO
#!else
#BASEADDRESS=/DYNAMICBASE:NO /BASE:0x7E110000 /FIXED:NO
#!endif
#BASEADDRESS=/DYNAMICBASE:NO /BASE:0x6F110000 /FIXED:NO
#BASEADDRESS=/DYNAMICBASE:NO /BASE:0x7EB00000 /FIXED:NO
#/BASE:0x6F780000 

#!ifdef DEBUG
#OUTNAME = ConEmuHk
#!endif

RC_NAME = ConEmuHk

LINK_OBJS = \
$(INTDIR)\Ansi.obj \
$(INTDIR)\CEStr.obj \
$(INTDIR)\CmdLine.obj \
$(INTDIR)\Common.obj \
$(INTDIR)\ConEmuCheck.obj \
$(INTDIR)\ConEmuHooks.obj \
$(INTDIR)\Connector.obj \
$(INTDIR)\ConsoleMixAttr.obj \
$(INTDIR)\ConsoleRead.obj \
$(INTDIR)\DefTermHk.obj \
$(INTDIR)\Entry.obj \
$(INTDIR)\Execute.obj \
$(INTDIR)\ExtConsole.obj \
$(INTDIR)\GuiAttach.obj \
$(INTDIR)\HandleKeeper.obj \
$(INTDIR)\hkCmdExe.obj \
$(INTDIR)\hkConsole.obj \
$(INTDIR)\hkConsoleInput.obj \
$(INTDIR)\hkConsoleOutput.obj \
$(INTDIR)\hkDialog.obj \
$(INTDIR)\hkEnvironment.obj \
$(INTDIR)\hkFarExe.obj \
$(INTDIR)\HkFunc.obj \
$(INTDIR)\hkGDI.obj \
$(INTDIR)\hkKernel.obj \
$(INTDIR)\hkLibrary.obj \
$(INTDIR)\hkMessages.obj \
$(INTDIR)\hkProcess.obj \
$(INTDIR)\hkStdIO.obj \
$(INTDIR)\hkWindow.obj \
$(INTDIR)\hlpConsole.obj \
$(INTDIR)\Injects.obj \
$(INTDIR)\InQueue.obj \
$(INTDIR)\MainThread.obj \
$(INTDIR)\MAssert.obj \
$(INTDIR)\MConHandle.obj \
$(INTDIR)\Memory.obj \
$(INTDIR)\MFileLog.obj \
$(INTDIR)\MModule.obj \
$(INTDIR)\MProcess.obj \
$(INTDIR)\MProcessBits.obj \
$(INTDIR)\MRect.obj \
$(INTDIR)\MSectionSimple.obj \
$(INTDIR)\MSection.obj \
$(INTDIR)\MSecurity.obj \
$(INTDIR)\MStrDup.obj \
$(INTDIR)\MStrSafe.obj \
$(INTDIR)\RConStartArgs.obj \
$(INTDIR)\SetHook.obj \
$(INTDIR)\ShellProcessor.obj \
$(INTDIR)\WCodePage.obj \
$(INTDIR)\WConsole.obj \
$(INTDIR)\WModuleCheck.obj \
$(INTDIR)\WObjects.obj \
$(INTDIR)\WThreads.obj


# minhook begin
LINK_OBJS = $(LINK_OBJS) \
$(INTDIR)\buffer.obj \
$(INTDIR)\hde.obj \
$(INTDIR)\hook.obj \
$(INTDIR)\trampoline.obj
# minhook end


!ifndef RC_NAME
RC_NAME=$(NAME)
!endif

!ifndef DEF_NAME
DEF_NAME=$(NAME)
!endif

#COMMON = ..
COMINC = ..
EXT = dll
DLLNAME = $(OUTNAME).$(EXT)
DLLFULLNAME = $(OUTDIR)$(ADDOUTDIR)\$(DLLNAME)
DEF = $(DEF_NAME).def
MAP = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME).map
RES = $(INTDIR)\$(RC_NAME).res

!ifdef VC8
COMPAT64=/Wp64
NOWIN98=/OPT:NOWIN98
!endif

PDBNAME="$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME).pdb"

!ifndef DEBUG
CPP_OPT=$(CPP_OPT) /DNDEBUG /Fd$(PDBNAME) /DHIDE_TODO /DCRTPRINTF /DCONEMU_MINIMAL
#/DCRTSTARTUP
!else
CPP_OPT=$(CPP_OPT) /DDEBUG /Fd$(PDBNAME) /DCRTPRINTF /DCONEMU_MINIMAL
#/DCRTSTARTUP
!endif

!ifdef AMD64
#COMMONLIB = ../common/libCRT64.lib
#../common/chkstk64.obj
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF $(DEF_SEH) /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS $(USERCPP)
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!elseif defined(IA64)
#COMMONLIB = ../common/libCRTIA64.lib
#../common/chkstkIA64.obj
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF $(DEF_SEH) /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS $(USERCPP)
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!else
#COMMONLIB = ../common/libCRT.lib
#../common/chkstk.obj
#../pvdCRT.lib
!ifdef CPP_UNALIGN
CPP_ALIGN=/Zp1
!endif
# /I"$(COMMON)"
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF $(DEF_SEH) $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c-a- /LD /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS $(CPPWINVER) $(USERCPP)
ULOUT=-Tpd -Re
LINK_MACHINE = /MACHINE:X86
!endif
CPP_PROJ=$(CPP_PROJ_NO) /Fo"$(INTDIR)\\"

LIBS = $(CRTLIB) $(USERLIBS)

!ifdef _BIN_PATH_
!ifndef _CL_PATH_
_CL_PATH_=$(_BIN_PATH_)
!endif
!ifndef _RC_PATH_
_RC_PATH_=$(_BIN_PATH_)
!endif
!ifndef _LINK_PATH_
_LINK_PATH_=$(_BIN_PATH_)
!endif
!endif


LNK=$(_LINK_PATH_)link.exe

#!ifdef DEBUG
#USE_PDB = 1
#!endif

!ifndef USE_PDB
LINK_DEBUG=/map:"$(MAP)" /pdb:$(PDBNAME)
CPP_DEBUG=
!else
LINK_DEBUG=/map:"$(MAP)" /debug /pdb:$(PDBNAME)
CPP_DEBUG=/Zi
!endif


#/merge:.rdata=.text /SUBSYSTEM:WINDOWS
#/ENTRY:_DllMainCRTStartup
#/ENTRY:DllMain
LINK_FLAGS=/nologo /DLL /RELEASE $(BASEADDRESS) $(LINK_MACHINE) $(NOWIN98) $(ENV_LIB_OPT) /def:"$(DEF)" /out:"$(DLLFULLNAME)" $(LINK_DEBUG)


CFLAGS_NO = $(MP) $(CPP_PROJ_NO) $(CPP_DEBUG) $(CPP_OPT)
CFLAGS = $(MP) $(CPP_PROJ) $(CPP_DEBUG) $(CPP_OPT)

!ifndef CC
CC=$(_CL_PATH_)cl.exe
!endif

!ifndef LIBR
LIBR=$(_LINK_PATH_)lib.exe
!endif

!ifndef RC
RC=$(_RC_PATH)rc.exe
!endif

!if !defined(SRC_PATHS_DEFINED) && defined(__MAKE__)
SRC_PATHS=.;..\common
.path.cpp=$(SRC_PATHS)
.path.c=$(SRC_PATHS)
.path.hpp=$(SRC_PATHS)
.path.h=$(SRC_PATHS)
.path.rc=$(SRC_PATHS)
.path.def=$(SRC_PATHS)
!endif

ALL: dirs $(INSTALL) $(DLLFULLNAME) clean

$(DLLFULLNAME) : $(LINK_OBJS) $(RES) $(LINK_DEP)
	@echo $(CLR_BRN)linking $@ :: $(LINK_FLAGS) $(LIBS)$(CLR_STD)
	$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES)
<<

!ifndef __MAKE__
.cpp{$(INTDIR)}.obj::
	@$(CC) @<<
	$(CFLAGS) $<
<<
{../common/}.cpp{$(INTDIR)}.obj::
	$(CC) @<<
	$(CFLAGS) $<
<<
.c{$(INTDIR)}.obj::
	$(CC) @<<
	$(CFLAGS) $<
<<
{../modules/minhook/src/}.c{$(INTDIR)}.obj::
	$(CC) @<<
	$(CFLAGS) $<
<<
!else
.cpp{$(INTDIR)}.obj:
	@$(CC) $(CFLAGS) { $< } 

{../common/}.cpp{$(INTDIR)}.obj:
	@$(CC) $(CFLAGS) { $< } 

.c{$(INTDIR)}.obj:
	@$(CC) $(CFLAGS) { $< } 

{../modules/minhook/src/}.c{$(INTDIR)}.obj:
	@$(CC) $(CFLAGS) { $< } 
!endif

$(RES): $(RC_NAME).rc
	@$(RC) /I"$(COMINC)" $(ENV_INC_OPT) $(RC_WIDE) /fo"$(RES)" $(RC_NAME).rc

.PHONY: dirs
dirs:
!ifdef INSTALL
	@if not exist "$(WORKDIR)\$(NULL)" mkdir "$(WORKDIR)"
!endif
	@if not exist "$(INTDIR)\$(NULL)" mkdir "$(INTDIR)"
	@if not exist "$(OUTDIR)\$(NULL)" mkdir "$(OUTDIR)"
	@if not exist "$(OUTDIR)$(ADDOUTDIR)\$(NULL)" mkdir "$(OUTDIR)$(ADDOUTDIR)"

.PHONY: clean
clean:
	@echo $(CLR_MOD)Copying release files$(CLR_STD)
	@if not exist "$(RELEASEDIR)\$(NULL)" mkdir "$(RELEASEDIR)"
	@echo moving `$(DLLFULLNAME)` to `$(RELEASEDIR)\$(OUTNAME).dll`
	@move $(DLLFULLNAME) $(RELEASEDIR)\$(OUTNAME).dll > nul
	@echo copying `$(PDBNAME)` to `$(RELEASEDIR)\$(OUTNAME).pdb`
	@copy $(PDBNAME) $(RELEASEDIR)\$(OUTNAME).pdb > nul
	@echo moving `$(MAP)` to `$(RELEASEDIR)\$(OUTNAME).map`
	@move $(MAP) $(RELEASEDIR)\$(OUTNAME).map > nul


# minhook begin
$(INTDIR)\hde.obj:        hde.c

$(INTDIR)\buffer.obj:     ../modules/minhook/src/buffer.c

$(INTDIR)\hook.obj:       ../modules/minhook/src/hook.c

$(INTDIR)\trampoline.obj: ../modules/minhook/src/trampoline.c
# minhook end

################
#LINK_OBJS begin

$(INTDIR)\Ansi.obj: Ansi.cpp

$(INTDIR)\CEStr.obj: ../common/CEStr.cpp ../common/CEStr.h

$(INTDIR)\CmdLine.obj: ../common/CmdLine.cpp ../common/CmdLine.h

$(INTDIR)\Common.obj: ../common/Common.cpp

$(INTDIR)\ConEmuCheck.obj: ../common/ConEmuCheck.cpp ../common/ConEmuCheck.h

$(INTDIR)\ConEmuCmd.obj: ConEmuCmd.cpp

$(INTDIR)\ConEmuHk.obj: ConEmuHk.cpp

$(INTDIR)\ConEmuHooks.obj: ConEmuHooks.cpp

$(INTDIR)\Connector.obj: Connector.cpp Connector.h

$(INTDIR)\ConsoleMixAttr.obj: ../common/ConsoleMixAttr.cpp ../common/ConsoleMixAttr.h

$(INTDIR)\ConsoleRead.obj: ../common/ConsoleRead.cpp ../common/ConsoleRead.h

$(INTDIR)\DefTermHk.obj: DefTermHk.cpp

$(INTDIR)\Entry.obj: Entry.cpp ../common/PipeServer.h

$(INTDIR)\Execute.obj: ../common/Execute.cpp ../common/Execute.h

$(INTDIR)\ExtConsole.obj: ExtConsole.cpp ExtConsole.h

$(INTDIR)\GuiAttach.obj: GuiAttach.cpp GuiAttach.h

$(INTDIR)\HandleKeeper.obj: ../common/HandleKeeper.cpp ../common/HandleKeeper.h

$(INTDIR)\hkCmdExe.obj: hkCmdExe.cpp hkCmdExe.h

$(INTDIR)\hkConsole.obj: hkConsole.cpp hkConsole.h

$(INTDIR)\hkConsoleInput.obj: hkConsoleInput.cpp hkConsoleInput.h

$(INTDIR)\hkConsoleOutput.obj: hkConsoleOutput.cpp hkConsoleOutput.h

$(INTDIR)\hkDialog.obj: hkDialog.cpp hkDialog.h

$(INTDIR)\hkEnvironment.obj: hkEnvironment.cpp hkEnvironment.h

$(INTDIR)\hkFarExe.obj: hkFarExe.cpp hkFarExe.h

$(INTDIR)\HkFunc.obj: ../common/HkFunc.cpp ../common/HkFunc.h

$(INTDIR)\hkGDI.obj: hkGDI.cpp hkGDI.h

$(INTDIR)\hkKernel.obj: hkKernel.cpp hkKernel.h

$(INTDIR)\hkLibrary.obj: hkLibrary.cpp hkLibrary.h

$(INTDIR)\hkMessages.obj: hkMessages.cpp hkMessages.h

$(INTDIR)\hkProcess.obj: hkProcess.cpp hkProcess.h

$(INTDIR)\hkStdIO.obj: hkStdIO.cpp hkStdIO.h

$(INTDIR)\hkWindow.obj: hkWindow.cpp hkWindow.h

$(INTDIR)\hlpConsole.obj: hlpConsole.cpp hlpConsole.h

$(INTDIR)\Injects.obj: Injects.cpp Console2.h

$(INTDIR)\InQueue.obj: ../common/InQueue.cpp

$(INTDIR)\MainThread.obj: MainThread.cpp MainThread.h

$(INTDIR)\MAssert.obj: ../common/MAssert.cpp

$(INTDIR)\MConHandle.obj: ../common/MConHandle.cpp ../common/MConHandle.h

$(INTDIR)\Memory.obj: ../common/Memory.cpp

$(INTDIR)\MFileLog.obj: ../common/MFileLog.cpp ../common/MFileLog.h

$(INTDIR)\MModule.obj: ../common/MModule.cpp ../common/MModule.h

$(INTDIR)\MProcess.obj: ../common/MProcess.cpp ../common/MProcess.h ../common/MToolHelp.h

$(INTDIR)\MProcessBits.obj: ../common/MProcessBits.cpp ../common/MProcessBits.h

$(INTDIR)\MRect.obj: ../common/MRect.cpp ../common/MRect.h

$(INTDIR)\MSectionSimple.obj: ../common/MSectionSimple.cpp ../common/MSectionSimple.h ../common/MSection.h

$(INTDIR)\MSection.obj: ../common/MSection.cpp ../common/MSectionSimple.h ../common/MSection.h

$(INTDIR)\MSecurity.obj: ../common/MSecurity.cpp

$(INTDIR)\MStrDup.obj: ../common/MStrDup.cpp ../common/MStrDup.h

$(INTDIR)\MStrSafe.obj: ../common/MStrSafe.cpp

$(INTDIR)\RConStartArgs.obj: ../common/RConStartArgs.cpp ../common/RConStartArgs.h

$(INTDIR)\SetHook.obj: SetHook.cpp SetHook.h

$(INTDIR)\ShellProcessor.obj: ShellProcessor.cpp ShellProcessor.h

$(INTDIR)\UserImp.obj: UserImp.cpp UserImp.h

$(INTDIR)\WCodePage.obj: ../common/WCodePage.cpp ../common/WCodePage.h

$(INTDIR)\WConsole.obj: ../common/WConsole.cpp ../common/WConsole.h

$(INTDIR)\WModuleCheck.obj: ../common/WModuleCheck.cpp ../common/WModuleCheck.h

$(INTDIR)\WObjects.obj: ../common/WObjects.cpp ../common/WObjects.h

$(INTDIR)\WThreads.obj: ../common/WThreads.cpp ../common/WThreads.h

#LINK_OBJS end
##############
